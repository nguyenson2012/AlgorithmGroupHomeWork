// Time complexity: O(n) 
// Space complexity: O(n) - Using map  
// Explanation: Because all the anagrams have the same sorted string.
//		So, using map to store <sorted string, vector<string>>.

class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> mp;
        for(string str : strs){
            string word = str;
            sort(word.begin(), word.end());
            mp[word].push_back(str);
        }

        vector<vector<string>> ans;
        for(auto key : mp){
            ans.push_back(key.second);
        }
        return ans;
    }
};